{"hiddenService":"ngoyl7j7htuafjha.onion","webDetected":true,"sshDetected":false,"ricochetDetected":false,"ircDetected":false,"ftpDetected":false,"smtpDetected":false,"bitcoinDetected":false,"mongodbDetected":false,"vncDetected":false,"xmppDetected":false,"serverPoweredBy":"","serverVersion":"nginx/1.2.1","foundApacheModStatus":false,"relatedOnionServices":null,"relatedOnionDomains":null,"linkedSites":null,"internalPages":null,"ipAddresses":null,"openDirectories":null,"exifImages":null,"interestingFiles":null,"pageReferencedDirectories":null,"pgpKeys":null,"hashes":["655730d38d16590dc82dce13cd0e611452666293"],"snapshot":"\u003c?php //display the index of threads in a folder\n/* ====================================================================================================================== */\n/* NoNonsense Forum v26 © Copyright (CC-BY) Kroc Camen 2010-2015\n   licenced under Creative Commons Attribution 3.0 \u003ccreativecommons.org/licenses/by/3.0/deed.en_GB\u003e\n   you may do whatever you want to this code as long as you give credit to Kroc Camen, \u003ccamendesign.com\u003e\n*/\n\n//bootstrap the forum; you should read that file first\nrequire_once './start.php';\n\n//submitted info for making a new thread\n//(name / password already handled in 'start.php')\ndefine ('TITLE', mb_substr (@$_POST['title'], 0, SIZE_TITLE));\ndefine ('TEXT',  mb_substr (@$_POST['text'],  0, SIZE_TEXT ));\n\n//can the current user post new threads in the current forum?\n//(posting replies is dependent on the the thread -- if locked -- so tested in 'thread.php')\ndefine ('CAN_POST', FORUM_ENABLED \u0026\u0026 (\n        //- if the user is a moderator or member of the current forum, they can post\n        IS_MOD || IS_MEMBER ||\n        //- if the forum is unlocked (mods will have to log in to see the form)\n        !FORUM_LOCK\n));\n\n/* ======================================================================================================================\n   new thread submitted\n   ====================================================================================================================== */\n//has the user submitted a new thread?\n//(`AUTH` will be true if username and password submitted and correct, `TITLE` and `TEXT` are checked to not be blank)\nif (CAN_POST \u0026\u0026 AUTH \u0026\u0026 TITLE \u0026\u0026 TEXT) {\n        //the file on disk is a simplified version of the title; see 'lib/functions.php' for `safeTransliterate`\n        $translit = safeTransliterate (TITLE);\n        \n        //if a thread already exsits with that name, append a number until an available filename is found.\n        //we also check for directories with the same name so as to avoid problematic Apache behaviour\n        $c = 0; do $file = $translit.($c++ ? '_'.($c-1) : '');\n        while (file_exists (\"$file\") || file_exists (\"$file.rss\"));\n        \n        //write out the new thread as an RSS file:\n        $post_id = base_convert (microtime (), 10, 36);\n        $rss = new DOMTemplate (file_get_contents (FORUM_LIB.'rss-template.xml'));\n        $rss-\u003eset (array (\n                '/rss/channel/title'            =\u003e TITLE,\n                '/rss/channel/link'             =\u003e FORUM_URL.url (PATH_URL, $file),\n                //the thread's first post\n                '/rss/channel/item/title'       =\u003e TITLE,\n                '/rss/channel/item/link'        =\u003e FORUM_URL.url (PATH_URL, $file).'#'.$post_id,\n                '/rss/channel/item/author'      =\u003e NAME,\n                '/rss/channel/item/pubDate'     =\u003e gmdate ('r'),\n                '/rss/channel/item/description' =\u003e formatText (TEXT,  //process markup into HTML...\n                                                        //provide a permalink so that title lines link to themselves\n                                                        FORUM_URL.url (PATH_URL, $file, 1),\n                                                        //also provide the post ID for title-linking and ID-uniqueness\n                                                        $post_id\n                                                )\n        //remove the locked / deleted categories\n        ))-\u003eremove ('//category');\n        \n        file_put_contents (\"$file.rss\", $rss) or require FORUM_LIB.'error_permissions.php';\n        \n        //regenerate the folder's RSS file\n        indexRSS ();\n        \n        //redirect to newley created thread\n        header ('Location: '.FORUM_URL.url (PATH_URL, $file), true, 303);\n        exit;\n}\n\n\n/* ======================================================================================================================\n   template the page\n   ====================================================================================================================== */\n//first load the list of threads in the forum so that we can determine the number of pages and validate the page number,\n//the thread list won't be used until further down after templating begins\nif ($threads = preg_grep ('/\\.rss$/', scandir ('.'))) {\n        //sort the list of threads in the forum\n        array_multisort (array_map (\n                //if the forum is set to \"news\" lock, we will order the threads by their original date\n                (FORUM_LOCK == 'news') ? 'filectime' : 'filemtime',\n        $threads), SORT_DESC, $threads);\n        \n        //get sticky list (see 'lib/functions.php')\n        //(the use of `array_intersect` will only return filenames in `sticky.txt` that were also in the directory)\n        $stickies = array_intersect (getStickies (), $threads);\n        //order the stickies\n        array_multisort (array_map (\n                //if the forum is set to \"news\" lock, we will order the threads by their original date\n                (FORUM_LOCK == 'news') ? 'filectime' : 'filemtime',\n        $stickies), SORT_DESC, $stickies);\n        //remove the stickies from the thread list\n        $threads = array_diff ($threads, $stickies);\n        \n        //handle a rounding problem with working out the number of pages (PHP 5.3 has a fix for this)\n        $PAGES = count ($threads) % FORUM_THREADS == 1  ? floor (count ($threads) / FORUM_THREADS)\n                                                        : ceil  (count ($threads) / FORUM_THREADS);\n        //validate the given page number; an invalid page number returns the first instead\n        $PAGE  = !PAGE || PAGE \u003e $PAGES ? 1 : PAGE;\n} else {\n        $PAGES = 1; $PAGE = 1;\n}\n\n/* load the template into DOM where we can manipulate it:\n   ---------------------------------------------------------------------------------------------------------------------- */\n//(see 'lib/domtemplate.php' or \u003ccamendesign.com/dom_templating\u003e for more details. `prepareTemplate` can be found in\n// 'lib/functions.php' and handles some shared templating done across all pages)\n$template = prepareTemplate (\n        THEME_ROOT.'index.html',\n        //the canonical URL of this page\n        url (PATH_URL, '', $PAGE),\n        //the HTML title is both templated and translatable. `THEME_TITLE` is defined in 'start.php' and is a shorthand to\n        //either the default language string in 'theme.php' or the translated string in 'lang.*.php'\n        sprintf (THEME_TITLE,\n                //if in a sub-forum use the folder name, else the site's name\n                PATH ? SUBFORUM : FORUM_NAME,\n                //if on page 2 or greater, include the page number in the title\n                $PAGE\u003e1 ? sprintf (THEME_TITLE_PAGENO, $PAGE) : ''\n        )\n)-\u003esetValue (\n        //the RSS feed for this forum / sub-forum\n        'a#nnf_rss@href', FORUM_PATH.PATH_URL.'index.xml'\n)-\u003eremove (array (\n        //if threads can't be added (forum is disabled / locked, user is not moderator / member),\n        //remove the \"add thread\" link and anything else (like the input form) related to posting\n        '#nnf_add, #nnf_new-form'       =\u003e !CAN_POST,\n        //if the forum is not thread-locked (only mods can post, anybody can reply) then remove the warning message\n        '#nnf_forum-lock-threads'       =\u003e !FORUM_LOCK || FORUM_LOCK == 'posts' || IS_MOD,\n        //if the forum is not post-locked (only mods can post / reply) then remove the warning message\n        '#nnf_forum-lock-posts'         =\u003e FORUM_LOCK != 'posts'   || IS_MOD || IS_MEMBER\n));\n\n//an 'about.html' file can be provided to add a description or other custom HTML to the forum / sub-forum,\n//for translations, 'about_en.html' can be used where 'en' is the language code for the translation\n//(see 'lang.example.php' in the themes folder for more details on translation)\nif ($about = @array_shift (array_filter (array (\n        @file_get_contents ('about_'.LANG.'.html'), @file_get_contents ('about.html')\n)))) {\n        //load the 'about.html' file and insert it into the page\n        $template-\u003esetValue ('#nnf_about', $about, true);\n} else {\n        //no file? remove the element reserved for it\n        $template-\u003eremove ('#nnf_about');\n}\n\n/* sub-forums\n   ---------------------------------------------------------------------------------------------------------------------- */\nif ($folders = array_filter (\n        //get a list of folders:\n        //include only directories, but ignore directories starting with ‘.’ and the users / themes folders\n        //TODO: need to do this check in a way that allows user expansion\n        preg_grep ('/^(\\.|users$|themes$|lib$|cgi-bin$ |escrow$)/', scandir ('.'), PREG_GREP_INVERT), 'is_dir'\n)) {\n        //get the dummy list-item to repeat (removes it and takes a copy)\n        $item = $template-\u003erepeat ('.nnf_folder');\n        \n        foreach ($folders as $FOLDER) {\n                //the sorting (below) requires we be in the directory at hand to use `filemtime`\n                chdir ($FOLDER);\n                \n                //check if / how the forum is locked\n                $lock = trim (@file_get_contents ('locked.txt'));\n                \n                //get a list of files in the folder to determine which one is newest\n                $files = preg_grep ('/\\.rss$/', scandir ('.'));\n                //order by last modified date / created date (\"news\" forum)\n                array_multisort (array_map (\n                        ($lock == 'news') ? 'filectime' : 'filemtime',\n                $files), SORT_DESC, $files);\n                \n                //read the newest thread (folder could be empty though)\n                $last = ($xml = @simplexml_load_file ($files[0])) ? $xml-\u003echannel-\u003eitem[0] : '';\n                \n                //start applying the data to the template\n                $item-\u003eset (array (\n                        'a.nnf_folder-name'             =\u003e $FOLDER,\n                        'a.nnf_folder-name@href'        =\u003e url (PATH_URL.safeURL ($FOLDER).'/')\n                \n                //remove the lock icons if not required\n                ))-\u003eremove (array (\n                        '.nnf_lock-threads'             =\u003e $lock != 'threads',\n                        '.nnf_lock-posts'               =\u003e $lock != 'posts'\n                ));\n                //is there a last post in this sub-forum?\n                if ((bool) $last) {\n                        $item-\u003eset (array (\n                                //last post author name\n                                '.nnf_post-author'              =\u003e $last-\u003eauthor,\n                                //last post time (human readable)\n                                'time.nnf_post-time'            =\u003e date (DATE_FORMAT, strtotime ($last-\u003epubDate)),\n                                //last post time (machine readable)\n                                'time.nnf_post-time@datetime'   =\u003e date ('c', strtotime ($last-\u003epubDate)),\n                                //link to the last post\n                                'a.nnf_post-link@href'          =\u003e substr ($last-\u003elink, strpos ($last-\u003elink, '/', 9))\n                        ))-\u003eremove (array (\n                                //is the last author a mod?\n                                '.nnf_post-author@class'        =\u003e isMod ($last-\u003eauthor) ? false : 'nnf_mod'\n                        ));\n                } else {\n                        //no last post, remove the template for it\n                        $item-\u003eremove ('.nnf_subforum-post');\n                }\n                \n                //attach the templated sub-forum item to the list\n                $item-\u003enext ();\n                \n                chdir ('..');\n        }\n        \n} else {\n        //no sub-forums, remove the template stuff\n        $template-\u003eremove ('#nnf_folders');\n}\n\n/* threads\n   ---------------------------------------------------------------------------------------------------------------------- */\nif ($threads || @$stickies) {\n        //do the page links (stickies are not included in the count as they appear on all pages)\n        theme_pageList ($template, '', $PAGE, $PAGES);\n        //slice the full list into the current page\n        $threads = array_merge ($stickies, array_slice ($threads, ($PAGE-1) * FORUM_THREADS, FORUM_THREADS));\n        \n        //get the dummy list-item to repeat (removes it and takes a copy)\n        $item = $template-\u003erepeat ('.nnf_thread');\n        \n        //generate the list of threads with data, for the template\n        foreach ($threads as $file) if (\n                //read the file, and refer to the last post made\n                $xml = @simplexml_load_file ($file)\n        ) if (  //get the last post in the thread\n                $last = \u0026$xml-\u003echannel-\u003eitem[0]\n                //apply the data to the template\n        ) $item-\u003eset (array (\n                //thread title and URL\n                'a.nnf_thread-name'             =\u003e $xml-\u003echannel-\u003etitle,\n                'a.nnf_thread-name@href'        =\u003e url (PATH_URL, pathinfo ($file, PATHINFO_FILENAME)),\n                //number of replies\n                '.nnf_thread-replies'           =\u003e count ($xml-\u003echannel-\u003eitem) - 1,\n                \n                //last post info:\n                //link to the last post\n                'a.nnf_thread-post@href'        =\u003e substr ($last-\u003elink, strpos ($last-\u003elink, '/', 9)),\n                //last post time (human readable)\n                'time.nnf_thread-time'          =\u003e date (DATE_FORMAT, strtotime ($last-\u003epubDate)),\n                //last post time (machine readable)\n                'time.nnf_thread-time@datetime' =\u003e date ('c', strtotime ($last-\u003epubDate)),\n                //last post author\n                '.nnf_thread-author'            =\u003e $last-\u003eauthor\n        ))-\u003eremove (array (\n                //if the thread isn’t locked, remove the lock icon\n                '.nnf_thread-locked'            =\u003e !$xml-\u003echannel-\u003expath ('category[.=\"locked\"]'),\n                //if the thread isn't sticky, remove the 'sticky' class\n                './@class'                      =\u003e !in_array ($file, $stickies) ? 'nnf_sticky' : false,\n                //if the thread isn't sticky, remove the sticky icon\n                '.nnf_thread-sticky'            =\u003e !in_array ($file, $stickies)\n                                                //the lock-icon takes precedence over the sticky icon\n                                                || $xml-\u003echannel-\u003expath ('category[.=\"locked\"]'),\n                //is the last post author a mod?\n                '.nnf_thread-author@class'      =\u003e !isMod ($last-\u003eauthor) ? 'nnf_mod' : false\n        \n        //attach the templated sub-forum item to the list\n        ))-\u003enext ();\n        \n} else {\n        //no threads, remove the template stuff\n        $template-\u003eremove ('#nnf_threads');\n}\n\n/* new thread form\n   ---------------------------------------------------------------------------------------------------------------------- */\nif (CAN_POST) $template-\u003eset (array (\n        //set the field values from what was typed in before    //set the maximum field sizes\n        'input#nnf_title-field@value'           =\u003e TITLE,       'input#nnf_title-field@maxlength'       =\u003e SIZE_TITLE,\n        'input#nnf_name-field-http@value'       =\u003e NAME,\n        'input#nnf_name-field@value'            =\u003e NAME,        'input#nnf_name-field@maxlength'        =\u003e SIZE_NAME,\n        'input#nnf_pass-field@value'            =\u003e PASS,        'input#nnf_pass-field@maxlength'        =\u003e SIZE_PASS,\n        'textarea#nnf_text-field'               =\u003e TEXT,        'textarea#nnf_text-field@maxlength'     =\u003e SIZE_TEXT\n        \n//is the user already signed-in?\n))-\u003eremove (AUTH_HTTP\n        //don’t need the usual name / password fields and the deafult message for anonymous users\n        ? '#nnf_name, #nnf_pass, #nnf_email, #nnf_error-none'\n        //user is not signed in, remove the \"you are signed in as:\" field and the message for signed in users\n        : '#nnf_name-http, #nnf_error-none-http'\n        \n//are new registrations allowed?\n)-\u003eremove (FORUM_NEWBIES\n        ? '#nnf_error-newbies'  //yes: remove the warning message\n        : '#nnf_error-none'     //no:  remove the default message\n        \n//handle error messages\n)-\u003eremove (array (\n        //if there's an error of any sort, remove the default messages\n        '#nnf_error-none, #nnf_error-none-http, #nnf_error-newbies' =\u003e FORM_SUBMIT,\n        //if the username \u0026 password are correct, remove the error message\n        '#nnf_error-auth' =\u003e !FORM_SUBMIT || !TITLE || !TEXT || !NAME || !PASS || AUTH,\n        //if the password is valid, remove the error message\n        '#nnf_error-pass' =\u003e !FORM_SUBMIT || !TITLE || !TEXT || !NAME || PASS,\n        //if the name is valid, remove the error message\n        '#nnf_error-name' =\u003e !FORM_SUBMIT || !TITLE || !TEXT || NAME,\n        //if the message text is valid, remove the error message\n        '#nnf_error-text' =\u003e !FORM_SUBMIT || !TITLE || TEXT,\n        //if the title is valid, remove the error message\n        '#nnf_error-title'=\u003e !FORM_SUBMIT || TITLE\n));\n\n//call the theme-specific templating function, in 'theme.php', before outputting\ntheme_custom ($template);\nexit ($template);\n\n?\u003e","pageTitle":"","responseHeaders":{"ACCEPT-RANGES":"bytes","CONNECTION":"keep-alive","CONTENT-LENGTH":"17234","CONTENT-TYPE":"text/plain","DATE":"Tue, 26 Jul 2016 07:36:30 GMT","LAST-MODIFIED":"Mon, 14 Mar 2016 01:14:49 GMT","SERVER":"nginx/1.2.1"},"bitcoinAddresses":null,"sshKey":"","ftpFingerprint":"","ftpBanner":"","smtpFingerprint":"","smtpBanner":""}
