{"hiddenService":"outopebs37nwkqf4.onion","webDetected":true,"sshDetected":false,"ricochetDetected":false,"ircDetected":false,"ftpDetected":false,"smtpDetected":false,"bitcoinDetected":false,"mongodbDetected":false,"vncDetected":false,"xmppDetected":false,"serverPoweredBy":"","serverVersion":"nginx/1.6.2","foundApacheModStatus":false,"relatedOnionServices":null,"relatedOnionDomains":null,"linkedSites":["ajax.googleapis.com","code.highcharts.com"],"internalPages":null,"ipAddresses":null,"openDirectories":null,"exifImages":null,"interestingFiles":null,"pageReferencedDirectories":null,"pgpKeys":null,"hashes":["dc5ec2737cdc98cfb81156e74c5d23b377ccab1f"],"snapshot":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n  \u003cmeta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/\u003e\n  \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"\u003e\u003c/script\u003e\n  \u003cscript src=\"ws.js\" type=\"text/javascript\"\u003e\u003c/script\u003e\n  \u003cscript type=\"text/javascript\"\u003e\n\n    var chart; \n    var dataTopics = new Array();\n\n    var wsbroker = \"raspberrypi.local\";  //mqtt websocket enabled broker\n    var wsport = 80;\n\n    var client = new Paho.MQTT.Client(wsbroker, wsport,\n        \"myclientid_\" + parseInt(Math.random() * 100, 10));\n\n    client.onConnectionLost = function (responseObject) {\n      console.log(\"connection lost: \" + responseObject.errorMessage);\n      client.connect(options);\n    };\n\n    client.onMessageArrived = function (message) {\n      console.log(message.destinationName, ' -- ', message.payloadString);\n      var ul = document.getElementById(\"list\");\n      var li = document.createElement(\"li\");\n      li.appendChild(document.createTextNode(message.payloadString));\n      //ul.appendChild(li);\n\n      if (dataTopics.indexOf(message.destinationName) \u003c 0){\n\t    dataTopics.push(message.destinationName); //add new topic to array\n\t    var y = dataTopics.indexOf(message.destinationName); //get the index no\n\t\t    \n\t    //create new data series for the chart\n\t\tvar newseries = {\n\t            id: y,\n\t            name: message.destinationName,\n\t            data: []\n\t            };\n\t\tchart.addSeries(newseries); //add the series\n\t    };\n\t\t \n\tvar y = dataTopics.indexOf(message.destinationName); //get the index no of the topic from the array\n\tvar myEpoch = new Date().getTime(); //get current epoch time\n\tvar thenum = message.payloadString.match(/ \\d{1,5} /);\n\n\tvar plotMqtt = [myEpoch, Number(thenum)]; //create the array\n\tif (isNumber(thenum)) { //check if it is a real number and not text\n\t\tplot(plotMqtt, y);\t//send it to the plot function\n\t};\n    };\n\nfunction isNumber(n) {\n\t  return !isNaN(parseFloat(n)) \u0026\u0026 isFinite(n);\n\t};\n\nfunction plot(point, chartno) {\n    \t//console.log(point);\n    \t\n\t        var series = chart.series[0],\n\t            shift = series.data.length \u003e 20; // shift if the series is \n\t                                             // longer than 20\n\t        // add the point\n\t        chart.series[chartno].addPoint(point, true, shift);  \n\t};\n\n\n\n    var options = {\n      timeout: 300,\n      onSuccess: function () {\n        console.log(\"mqtt connected\");\n        client.subscribe('dht11', {qos: 1});\n      },\n      onFailure: function (message) {\n        console.log(\"Connection failed: \" + message.errorMessage);\n      }\n    };\n\n  function init() {\n      Highcharts.setOptions({ global: { useUTC: false } });\n\n      client.connect(options);\n  }\n\nfunction getMatches(string, regex, index) {\n  index || (index = 1); // default to the first capturing group\n  var matches = [];\n  var match;\n  while (match = regex.exec(string)) {\n    matches.push(match[index]);\n  }\n  return matches;\n}\n\n$(function () {\n     chart = new Highcharts.Chart({\n        chart: {\n            renderTo: 'container',\n            type: 'line'\n        },\n        title: {\n            text: 'Monthly Average Temperature'\n        },\n        subtitle: {\n            text: 'Source: Raspberry PI 3 DHT-11'\n        },\n        xAxis: {\n type: 'datetime',\n\t            tickPixelInterval: 150,\n\t            maxZoom: 20 * 1000\n        },\n        yAxis: {\n            title: {\n                text: 'Temperature (Â°C)'\n            },\nminPadding: 0.2,\n\t            maxPadding: 0.2,\n        },\n        plotOptions: {\n            line: {\n                dataLabels: {\n                    enabled: true\n                },\n                enableMouseTracking: false\n            }\n        },\n    });\n});\n\n    \u003c/script\u003e\n\u003cscript src=\"https://code.highcharts.com/highcharts.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"https://code.highcharts.com/modules/exporting.js\"\u003e\u003c/script\u003e\n\n  \u003c/head\u003e\n  \u003cbody onload=\"init();\"\u003e\n  \u003cul id=\"list\"/\u003e\n\u003cdiv id=\"container\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"\u003e\u003c/div\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n","pageTitle":"","responseHeaders":{"CONNECTION":"keep-alive","CONTENT-TYPE":"text/html","DATE":"Mon, 25 Jul 2016 13:22:04 GMT","LAST-MODIFIED":"Wed, 08 Jun 2016 23:57:02 GMT","SERVER":"nginx/1.6.2"},"bitcoinAddresses":null,"sshKey":"","ftpFingerprint":"","ftpBanner":"","smtpFingerprint":"","smtpBanner":""}
