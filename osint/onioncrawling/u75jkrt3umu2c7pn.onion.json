{"hiddenService":"u75jkrt3umu2c7pn.onion","webDetected":true,"sshDetected":false,"ricochetDetected":false,"ircDetected":false,"ftpDetected":false,"smtpDetected":true,"bitcoinDetected":false,"mongodbDetected":false,"vncDetected":false,"xmppDetected":false,"serverPoweredBy":"","serverVersion":"nginx","foundApacheModStatus":false,"relatedOnionServices":null,"relatedOnionDomains":null,"linkedSites":["niij.org","ghom.niij.org","jntlesnev5o7zysa.onion","media.ccc.de","www.youtube.com","poum.niij.org","en.wikipedia.org","darkk.net.ru","gitweb.torproject.org","github.com","river.styx.org","letsencrypt.org","outcomedubious.im","maclemon.at","metalab.at","aaronswartzhackathon.org","nyc.aaronswartzhackathon.org","www.w3.org"],"internalPages":["u75jkrt3umu2c7pn.onion",""],"ipAddresses":null,"openDirectories":null,"exifImages":null,"interestingFiles":null,"pageReferencedDirectories":["u75jkrt3umu2c7pn.onion","u75jkrt3umu2c7pn.onion"],"pgpKeys":null,"hashes":["3879fe70e5c3c074fb75166e37d0ab619fdfc81a"],"snapshot":"\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"\u003e\n\u003chtml xmlns=\"http://www.w3.org/1999/xhtml\"\u003e\n\u003chead\u003e\n\u003ctitle\u003epoum.niij.org: tor2tcp proof of concept\u003c/title\u003e\n\u003cmeta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /\u003e\n\u003cstyle type='text/css'\u003e\nbody {\n    background: #000;\n    color: #aaa;\n}\na:link {\n    color: #eee;\n}\na:visited {\n    color: #999;\n}\n\u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cpre\u003e\n\u003cstrong\u003e--------------------------------------------------------------- poum.\u003ca href=\"https://niij.org/\"\u003eniij.org\u003c/a\u003e\u003c/strong\u003e\n\nProof of concept implementation of \u003cstrong\u003etor2tcp\u003c/strong\u003e.\n\nAlso available as hidden service via \u003ca href=\"http://u75jkrt3umu2c7pn.onion/\"\u003eu75jkrt3umu2c7pn.onion\u003c/a\u003e:{25,\u003ca href=\"https://u75jkrt3umu2c7pn.onion/\"\u003e443\u003c/a\u003e,465,587}\n\nClone config files: $ git clone http://ghom.niij.org/repos/\u003ca href=\"http://ghom.niij.org/tor2tcp-sample.git\"\u003etor2tcp-sample.git\u003c/a\u003e\n\n\nPurpose ---------------------------------------------------------------------\n\nSay for example you have a website that you feel comfortable having online\nvia a public domain name, but you do not feel comfortable having it hosted\non the location of its clearnet IP because $reason (for example you are \u003ca href=\"http://jntlesnev5o7zysa.onion/\"\u003eThe\nPirate Bay\u003c/a\u003e). Or you want to store all your e-mail in an undisclosed location.\nThis configuration enables the transferring machine to know as little as\npossible about the actual hosting machine (because it's really a .onion)\nwhile using very little resources (i.e. a VPS with 128MB RAM for little\n$currency/$timeframe) on the transparent proxy machine and even less time to\nset it up.\n\n\ntl;dr \u0026amp;\u0026amp; wtf? ---------------------------------------------------------------\n\ntor2tcp attempts to:\n\n* Have arbitrary internet facing services that actually connect you to a\n  hidden service\n* Enable TLS handshakes with a hidden service from the regular internet,\n  enabling safe transport\n* Handle connections via tiny VPS (128MB RAM) proxy machine with no access to\n  information at all, except for configuration files and public ssh keys\n\n\nLightning talk at 30c3 ------------------------------------------------------\n\nI presented this project at 30c3, a recording of it is \u003ca href=\"http://media.ccc.de/browse/congress/2013/30C3_-_5564_-_en_-_saal_g_-_201312301245_-_lightning_talks_day_4_-_nickfarr.html\"\u003eavailable from CCC\u003c/a\u003e\n(skip to 1:41:05) with a mirror \u003ca href=\"https://www.youtube.com/watch?v=wlanbPyceeU#t=6064\"\u003eon Youtube\u003c/a\u003e. Feel free to take a look at \u003ca href=\"lightningtalk-mzeltner-tor2tcp.pdf\"\u003emy\nslides\u003c/a\u003e as well.\n\n\nIncoming connections --------------------------------------------------------\n\n1.2.3.4 is the IP of our example VPS. The following bits enable us to forward\nincoming connections to our hidden service.\n\nFor torrc:\n\n  TransPort 1.2.3.4:80\n  MapAddress 1.2.3.4 duskgytldkxiuqc6.onion\n  Tor2webMode 1 # when ./configure --enable-tor2web-mode\n\nFor multiple ports, in our case https and smtp related ports, we can redirect\ntraffic via iptables:\n\n  iptables -t nat -A PREROUTING -p tcp -d 1.2.3.4 --dport 443 -j REDIRECT --to-ports 80\n  iptables -t nat -A PREROUTING -p tcp -d 1.2.3.4 --dport 25 -j REDIRECT --to-ports 80\n  iptables -t nat -A PREROUTING -p tcp -d 1.2.3.4 --dport 465 -j REDIRECT --to-ports 80\n  iptables -t nat -A PREROUTING -p tcp -d 1.2.3.4 --dport 587 -j REDIRECT --to-ports 80\n\n\nReceiving E-Mail ------------------------------------------------------------\n\nAt Aaron Swartz Hackathon NYC I successfully tested establishing a TLS\nencrypted connection with a hidden service from the clearnet: \u003ca href=\"https://poum.niij.org/\"\u003eWeb\u003c/a\u003e, and now\nalso \u003ca href=\"mailto:mzeltner@poum.niij.org\"\u003eMail\u003c/a\u003e. There is nothing special about that setup, it is identical to\nsetting up a hidden service based web and mailserver.\n\n\nSending E-Mail --------------------------------------------------------------\n\nSince we don't want to be **** SPAM ****, we need to send all our mail via\nthe incoming transparent proxy machine. We don't want to turn our proxy into\na mail relay as we want to avoid having any data on that machine (like a mail\nqueue or logs). To do this in an anonymous fashion, we can use a torified ssh\nSOCKS5 tunnel, and redirect Postfix' traffic to that tunnel.\n\n  tmux new-session -d 'torsocks autossh -D 1080 doge@1.2.3.4'\n\nautossh helps us keep the connection to our transparent proxy open, enabling\nus to leave the setup unattended, while tmux is just in there because for\nsome reason backgrounding autossh did not work properly for me.\n\nTo be able to make that SOCKS5 tunnel into a \u003ca href=\"https://en.wikipedia.org/wiki/Transparent_proxy#Transparent_proxy\"\u003etransparent proxy\u003c/a\u003e, we can use\n\u003ca href=\"http://darkk.net.ru/redsocks/\"\u003eredsocks\u003c/a\u003e. The Debian standard settings worked just fine for me, as they\nexpect a SOCKS5 proxy to be open at 127.0.0.1:1080.\n\nThe last issue that remains is, Postfix chokes on TCP based DNS requests, and\n\u003ca href=\"https://gitweb.torproject.org/torspec.git/blob/HEAD:/proposals/219-expanded-dns.txt\"\u003eTor does not yet support MX record lookups\u003c/a\u003e, so we need a way to tunnel our DNS\nrequests as well. \u003ca href=\"https://github.com/jtRIPper/dns-tcp-socks-proxy\"\u003edns-tcp-socks-proxy\u003c/a\u003e comes in handy here. My dns_proxy.conf\nlooks like this:\n\n  socks_port = 1080\n  socks_addr = 127.0.0.1\n  listen_addr = 127.0.0.1\n  listen_port = 53\n  set_user = nobody\n  set_group = nogroup\n  resolv_conf = resolv.conf\n  log_file = /dev/null\n\nAnd resolv.conf:\n\n  213.73.91.35\n  85.214.20.141\n  8.8.8.8\n  8.8.4.4\n\nAfter all of that is up and running, we an finally redirect Postfix' traffic\n(including DNS) through our torified SOCKS5 tunnel:\n\n  iptables -t nat -A OUTPUT ! -o lo -p tcp -m owner --uid-owner postfix -m tcp -j REDIRECT --to-ports 12345\n  iptables -t nat -A OUTPUT ! -o lo -p udp -m owner --uid-owner postfix -m udp --dport 53 -j REDIRECT --to-ports 53\n  iptables -t filter -A OUTPUT -p tcp -m owner --uid-owner postfix -m tcp --dport 12345 -j ACCEPT\n  iptables -t filter -A OUTPUT -p udp -m owner --uid-owner postfix -m udp --dport 53 -j ACCEPT\n  iptables -t filter -A OUTPUT ! -o lo -m owner --uid-owner postfix -j DROP\n\nAnd that's it! This should work for other services like XMPP as well. That\nneeds further testing though.\n\n\nTODO ------------------------------------------------------------------------\n\n* Test receiving mail via .onion\n  * Authenticate .onion origin via DKIM signature of the hidden service key?\n  * \u003ca href=\"http://river.styx.org/ww/2011/12/torfix.txt\"\u003eRevelant\u003c/a\u003e \u003ca href=\"http://river.styx.org/ww/2012/01/torfixbis.txt\"\u003eliterature\u003c/a\u003e\n* Seperate certificate for .onion\n* Stress testing (maybe a RPi as proxy would be sufficient small scale\n  mailservers?)\n\n\nSSL Certificate Fingerprints ------------------------------------------------\n\nDepricated since the move to \u003ca href=\"https://letsencrypt.org/\"\u003eLet's Encrypt\u003c/a\u003e.\n\n\nCredits ---------------------------------------------------------------------\n\n* \u003ca href=\"http://outcomedubious.im/\"\u003eAbel Luck\u003c/a\u003e for inspiration!\n* \u003ca href=\"https://maclemon.at/\"\u003eMacLemon\u003c/a\u003e for brain bounces\n* \u003ca href=\"https://metalab.at/wiki/Benutzer:Ra\"\u003era\u003c/a\u003e for co-discovery of incoming connection setup\n* \u003ca href=\"http://aaronswartzhackathon.org/\"\u003eAaron Swartz Hackathon\u003c/a\u003e (\u003ca href=\"http://nyc.aaronswartzhackathon.org/\"\u003eNYC\u003c/a\u003e) for getting me to work on it again\n\n\nContact ---------------------------------------------------------------------\n\n\u003ca href=\"https://niij.org/#person-contact\"\u003em  niij  org\u003c/a\u003e / \u003ca href=\"https://niij.org/pubkey.asc\"\u003e4096R/6CAC71020AF5D60D\u003c/a\u003e\n(Fingerprint: 0AA7 9AE2 D160 71DF 98AD  3B07 6CAC 7102 0AF5 D60D)\n\n\n-----------------------------------------------------------------------------\n\u003c/pre\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n","pageTitle":"poum.niij.org: tor2tcp proof of concept","responseHeaders":{"CONNECTION":"keep-alive","CONTENT-TYPE":"text/html; charset=utf-8","DATE":"Sat, 23 Jul 2016 01:49:14 GMT","LAST-MODIFIED":"Tue, 08 Dec 2015 00:06:32 GMT","SERVER":"nginx"},"bitcoinAddresses":null,"sshKey":"","ftpFingerprint":"","ftpBanner":"","smtpFingerprint":"e38901823e5c0867508443eb61fdbf5312b864f1","smtpBanner":"220 poum.niij.org ESMTP Postfix (Debian/GNU)\r\n"}
